---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
    <div class="bg-gradient"></div>
		<slot />
	</body>
</html>
<style is:global>  
	* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  :root {
    --steel: linear-gradient(90deg, rgba(69,69,69,1) 0%, rgba(176,176,176,1) 12%, rgba(163,163,163,1) 23%, rgba(120,120,120,1) 33%, rgba(120,120,120,1) 35%, rgba(181,181,181,1) 51%, rgba(251,251,251,1) 77%, rgba(181,181,181,1) 88%, rgba(69,69,69,1) 100%);
    --dark: #201b19;
    --dark-gradient: linear-gradient(90deg, rgba(32,27,25,1) 0%, rgba(32,27,25,1) 30%, rgba(79,67,67,1) 57%, rgba(32,27,25,1) 80%, rgba(32,27,25,1) 100%);
  }

  body {
    background: lightblue;
    transition-duration: 0.3s;
    height: 100vh;
    display: flex;
    flex-direction: column;
  }

  .bg-gradient {
    position: absolute;
    height: 100%;
    width: 100%;
    background: radial-gradient(circle, rgba(255,255,255,0) 0%, rgba(0,0,0,0.8) 100%);
  }

  .mirror-x {
    transform: scaleX(-1);
    -webkit-transform: scaleX(-1);
  }

  .mirror-y {
    transform: scaleY(-1);
    -webkit-transform: scaleY(-1);
  }

  .bg-steel {
    background: var(--steel);
  }

  .bg-dark {
    background: var(--dark);
  }

  .bg-dark-gradient {
    background: var(--dark-gradient);
  }

  .img-bg {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    height: 100%;
    width: 100%;
  }

  .mix-texture {
    background-image: url(mix-texture.svg);
  }

  .teeth-texture {
    background-image: url(teeth-texture.svg);
  }

  .waves-1 {
    background-image: url(waves-1.svg);
  }

  .waves-2 {
    background-image: url(waves-2.svg);
  }

</style>

<script>
  const hum = new Audio('hum.wav');
  const swing1 = new Audio('swing-1.wav');
  const swing2 = new Audio('swing-2.wav');
  const powerOn = new Audio('poweron.wav');
  const powerOff = new Audio('poweroff.wav');

  const hiltContainer = document.getElementById("hilt-container");
  const powerBtn = document.getElementById("power-btn");
  const blade = document.getElementById("blade");
  
  let lightsaberOn: boolean = false;
  let zoom: boolean = true;

  hum.volume = 0.25;
  swing1.volume =0.25;
  swing2.volume = 0.25;
  powerOn.volume = 0.25;
  powerOff.volume = 0.25;

  document.addEventListener('click', () => {
    powerBtn?.focus();
  });
  
  document.addEventListener('wheel', (event) => {
    if (event.deltaY < 0) {
      zoomIn();
    } else {
      zoomOut();
    }
  });

  powerBtn?.addEventListener("click", handleBlade);

  function handleBlade() {
    if (lightsaberOn) {
      powerOffSound();
      powerOffBlade();
      lightsaberOn = false;
    } else {
      powerOnSound();
      powerOnBlade();
      lightsaberOn = true;
    }
  }

  function zoomIn() {
    if (!zoom) {
      zoom = true;
      hiltContainer!.style.height = "100%";
      if (lightsaberOn) {
        swing2.play();
      }
    }
  }

  function zoomOut() {
    if (zoom) {
      zoom = false;
      hiltContainer!.style.height = "25%";
      if (lightsaberOn) {
        swing1.play();
      }
    }
  }

  function powerOffSound() {
    powerOff.play();
    hum.pause();
    hum.currentTime = 0;
    powerOn.pause();
    powerOn.currentTime = 0;
  }

  function powerOnSound() {
    hum.play();
    powerOn.play();
    hum.addEventListener('timeupdate', () => {
      const buffer = 0.7;
      if (hum.currentTime > hum.duration - buffer) {
        hum.currentTime = 0;
        if (lightsaberOn) {
          hum.play();
        }
      }
    });
  }

  function powerOffBlade() {
    blade!.style.height = "0%";
    blade!.style.visibility = "hidden";
    document.body.style.background = "lightblue";
  }

  function powerOnBlade() {
    blade!.style.height = "100%";
    blade!.style.visibility = "visible";
    document.body.style.background = "lightgreen";
  }
</script>